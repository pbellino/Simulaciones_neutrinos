$OMP=8
[ T i t l e ]
Blindaje de polypropileno

[ P a r a m e t e r s ]
 icntl    =           0     # (D=0) 3:ECH 5:NOR 6:SRC 7,8:GSH 11:DSH 12:DUMP
 maxcas   =          1e5     # (D=10) number of particles per one batch
 maxbch   =          1e5     # (D=10) number of batches
 negs     =           0     # En neurus poner = 0 (en notebook tira error)
 $ file(1)  = /mnt/hdpablo/pablo/phits/phits        # (D=/mnt/hdpablo/pablo/phits/phits) PHITS install folder name
 file(1)  = /home/pbellino/grcn/phits3.17/phits317B/phits
 file(6)  = phits.out       # (D=phits.out) general output file name
istdev = -2


[ S o u r c e ] off
   s-type =   1             # mono-energetic axial source
       z0 =  -1.           # minimum position of z-axis [cm]
       z1 =  -1.           # maximum position of z-axis [cm]
       r0 =   1.0           # radius [cm]
      dir =   1.0           # z-direction of beam [cosine]
       e0 =   1000.          # energy of beam [MeV/u]
     proj =   neutron       # kind of incident nucleus

[ S o u r c e ] off
       $ Fuente de prueba para validar tallies
   s-type =   1             #   
     proj =  neutron        # kind of incident nucleus              
   e-type =  1
       ne =  10           # Recordar que la suma de los fjujos debe ir como multiplicador en t-cross
        1.0000E-09    1.0000E+00  
        1.0000E-08    1.0000E+00  
        1.0000E-07    1.0000E+00  
        1.0000E-06    1.0000E+00  
        1.0000E-05    0.0000E+00  
        1.0000E-04    2.0000E+00  
        1.0000E-03    1.0000E+00  
        1.0000E-02    1.0000E+00  
        1.0000E-01    1.0000E+00  
        1.0000E+00    1.0000E+00  
        1.0000E+01    
       set: c5[ 10 ]
       r0 =   0.1000        # radius [cm]
       x0 =   0.0000        # (D=0.0) center position of x-axis [cm]
       y0 =   0.0000        # (D=0.0) center position of y-axis [cm]
       z0 =   -10.0 
       z1 =   -10.0 
      dir =  1.0            # z-direction of beam [cosine]

[ S o u r c e ] 
   $ Considerando corte de los rápidos en 10MeV
   s-type =   1             #   
     proj =  neutron        # kind of incident nucleus              
   e-type =  4
       ne =  10           # Recordar que la suma de los fjujos debe ir como multiplicador en t-cross
        1.0000E-09     1.33211952e+05
        1.0000E-08     2.60102701e+05
        1.0000E-07     4.85627872e+03
        1.0000E-06     1.33434440e+02
        1.0000E-05     1.26943060e+01
        1.0000E-04     1.22008120e+00
        1.0000E-03     1.17094150e-01
        1.0000E-02     1.49131650e-02
        1.0000E-01     3.27225200e-03
        1.0000E+00     1.03291230e-03
        1.0000E+01
       $ Flujo total: 3.9832e5
       set: c5[ 3.9832e5 ]
       r0 =   1.0000        # radius [cm]
       x0 =   0.0000        # (D=0.0) center position of x-axis [cm]
       y0 =   0.0000        # (D=0.0) center position of y-axis [cm]
       z0 =   -10.0 
       z1 =   -10.0 
      dir =  1.0            # z-direction of beam [cosine]

[ S o u r c e ] off
   $ Considerando corte de los rápidos en 5MeV
   s-type =   1             #   
     proj =  neutron        # kind of incident nucleus              
   e-type =  1
       ne =  10           # Recordar que la suma de los fjujos debe ir como multiplicador en t-cross
         1.0000E-09              5.8254926e+03 
         1.0000E-08              1.1287127e+04
         1.0000E-07              1.6137532e+02
         1.0000E-06              9.1354640e-01
         1.0000E-05              8.3062170e-02
         1.0000E-04              8.0126370e-03
         1.0000E-03              7.4007790e-04
         1.0000E-02              9.1955780e-05
         1.0000E-01              1.9244635e-05
         1.0000E+00              3.6546050e-06
         1.0000E+01
         $ Flujo total: 1.7275e4
       set: c5[ 1.7275e4 ]
       r0 =   1.0000        # radius [cm]
       x0 =   0.0000        # (D=0.0) center position of x-axis [cm]
       y0 =   0.0000        # (D=0.0) center position of y-axis [cm]
       z0 =   -10.0 
       z1 =   -10.0 
      dir =  1.0            # z-direction of beam [cosine]



[ M a t e r i a l ]
$ Polypropylene (density = 0.9 g/cm3)
mat[ 1 ]    
          H1  -0.143711
           C  -0.856289

$ Air  (density =1.2E-03 g/cm3)
MAT[ 2 ]
          H  -6.4000E-04
          C  -1.4000E-04
          N  -7.5086E-01
          O  -2.3555E-01
         Ar  -1.2810E-02


[ Mat Name Color ]
    mat   name      color
     1    Polypropylene     grey
     2    Air               pastelblue 


[ S u r f a c e ]
  $ c1: espesor de celdas de control (comienzo y fin) (ojo con la fuente)
  $ c2: espesor del polipropileno
  set: c1[ 5.0] c2[ 5.0]
  10  so     500.
  11  rcc    0. 0. -c1 0. 0. c1 30.
  12  rcc    0. 0. 0. 0. 0. c2 30.
  13  rcc    0. 0. c2 0. 0. c1 30.


[ C e l l ]
 100    -1        10
 101     2 -1.2e-3  -11
 102     1 -0.9     -12 
 103     2 -1.2e-3  -13
 110     2 -1.2e-3  -10 11 12 13


[ T - C r o s s ]  
    title = Energy distribution in region mesh
     mesh =  reg            # mesh type is region-wise
      reg =    3            # number of crossing regions
      non     r-from  r-to      area
        1     110     101      1.000000        
        2     101     102      1.000000        
        3     102     103      1.000000        
   e-type =  3
       ne =  10
    emin = 1e-9
    emax = 10
     unit =    1            # unit is [1/cm^2/source]
     axis =  eng            # axis of output
     file = cross_reg.out   # file name of output for the above axis
   output = current            # surface crossing flux
     part = neutron
   epsout =    1            # (D=0) generate eps file by ANGEL
   factor = c5       # Flujo total (suma de los flujos usados en la fuente)


[ T - T r a c k ]
    title = Track Detection in xyz mesh
     mesh =  xyz            # mesh type is xyz scoring mesh
   x-type =    2            # x-mesh is linear given by xmin, xmax and nx
       nx =  100            # number of x-mesh points
     xmin =  -35.           # minimum value of x-mesh points
     xmax =   35.           # maximum value of x-mesh points
   y-type =    2            # y-mesh is linear given by ymin, ymax and ny
       ny =  100            # number of y-mesh points
     ymin =  -35.           # minimum value of y-mesh points
     ymax =   35.           # maximum value of y-mesh points
   z-type =    1            # z-mesh is given by the below data
       nz =    1            # number of z-mesh points
           -5.0  5.0
   e-type =    1            # e-mesh is given by the below data
       ne =    1            # number of e-mesh points
            0.0  5000.0
   t-type =    1            # t-mesh is given by the below data
       nt =    1            # number of t-mesh points
            0.0  1.0e+6
     unit =    1            # unit is [1/cm^2/source]
     axis =   xy            # axis of output
     file = track_xy.out  # file name of output for the above axis
     part =   neutron     
    gshow =    3            # 0: no 1:bnd, 2:bnd+mat, 3:bnd+reg 4:bnd+lat
   epsout =    1            # (D=0) generate eps file by ANGEL

[ T - T r a c k ]
    title = Track Detection in xyz mesh
     mesh =  xyz            # mesh type is xyz scoring mesh
   x-type =    2            # x-mesh is linear given by xmin, xmax and nx
       nx =  100            # number of x-mesh points
     xmin =  -35.           # minimum value of x-mesh points
     xmax =   35.           # maximum value of x-mesh points
   y-type =    1            # y-mesh is given by the below data
       ny =    1            # number of y-mesh points
           -1.0  1.0
   z-type =    2            # z-mesh is linear given by zmin, zmax and nz
       nz =  150            # number of z-mesh points
     zmin =  -20.           # minimum value of z-mesh points
     zmax =   80.           # maximum value of z-mesh points
   e-type =    1            # e-mesh is given by the below data
       ne =    1            # number of e-mesh points
            0.0  5000.0
   t-type =    1            # t-mesh is given by the below data
       nt =    1            # number of t-mesh points
            0.0  1.0e+6
     unit =    1            # unit is [1/cm^2/source]
     axis =   xz            # axis of output
     file = track_xz.out  # file name of output for the above axis
     part =   neutron 
    gshow =    3            # 0: no 1:bnd, 2:bnd+mat, 3:bnd+reg 4:bnd+lat
   epsout =    1            # (D=0) generate eps file by ANGEL

[ E n d ]
